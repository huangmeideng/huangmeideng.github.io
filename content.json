{"meta":{"title":"kinano的博客","subtitle":"kinano","description":"程序员的个人博客，发布一系列有趣的东西","author":"kinano","url":"http://kinano.top"},"pages":[],"posts":[{"title":"基于Vagrant搭建lnmp开发环境","slug":"Vagrant-lnmp","date":"2017-11-24T23:15:55.000Z","updated":"2017-11-25T01:08:34.603Z","comments":true,"path":"2017/11/25/Vagrant-lnmp/","link":"","permalink":"http://kinano.top/2017/11/25/Vagrant-lnmp/","excerpt":"前言使用vagrant搭建开发环境可以避免团队开发带来的开发环境不一致问题，避免了很多不必要的麻烦，同时其分发机制也也有利于新来的同事立即部署适合于公司的开发环境，非常便利，是很多互联网公司的首选。因此，学习如何搭建基于vagrant的开发环境是很有必要的。","text":"前言使用vagrant搭建开发环境可以避免团队开发带来的开发环境不一致问题，避免了很多不必要的麻烦，同时其分发机制也也有利于新来的同事立即部署适合于公司的开发环境，非常便利，是很多互联网公司的首选。因此，学习如何搭建基于vagrant的开发环境是很有必要的。 关于Vagrant 是一个简单易用的部署工具，用英文说应该是 Orchestration Tool 。它能帮助开发人员迅速的构建一个开发环境，帮助测试人员构建测试环境, Vagrant 基于 Ruby 开发，使用开源 VirtualBox 作为虚拟化支持，可以轻松的跨平台部署。 准备工作 vagrant安装 地址:https://www.vagrantup.com/downloads.html virtualbox安装 地址:https://www.virtualbox.org/wiki/Downloads xshell(如果你的开发机是window平台) 地址：http://www.netsarang.com/products/xsh_overview.html vagrant镜像 地址:http://pan.baidu.com/s/1eRP0rOA(如果你不喜欢，你也可以到官方选择下载自己喜欢的镜像 地址:http://www.vagrantbox.es) 建立自己的工作目录（笔者D:/vagrant）预备知识vagrant操作大多基于命令行，因此掌握几个常用命令对于后续的学习非常有用123456789101112131415161718192021vagrant box list #查看目前已有的boxvagrant box add #新增加一个boxvagrant box remove #删除指定boxvagrant init #初始化配置vagrantfilevagrant up #启动虚拟机vagrant ssh #ssh登陆虚拟机vagrant suspend #挂起虚拟机vagrant reload #重启虚拟机vagrant halt #关闭虚拟机vagrant status #查看虚拟机vagrant destory #删除虚拟机 部署环境1.安装基础环境打开XShell,输入vagrant -v查看vagrant是否安装成功 在你之前建立的工作目录建立一个虚拟机 查看已安装的box 初始化box并且打开虚拟机，进入虚拟机1vagrant init ubuntu1404 1vagrant up 1vagrant ssh 在window平台下vagrant ssh命令可能无法进入虚拟机，我们可以通过xshell客户端进行典型的window式进入 ####2.安装lnmp环境进入虚拟系统后先更换源，以便于快速下载需要的工具使用如下命令1sudo vim /etc/apt/sources.list 1sudo apt-get update 如果提示未安装vim，可使用命令1sudo apt-get install vim 安装php与相关扩展12345sudo apt-get install php5-clisudo apt-get install php-mcryptsudo apt-get install php-mysqlsudo apt-get install php-gdsudo apt-get install php5-cgi php5-fpm 检测是否安装成功1php -v 安装nginx1sudo apt-get install nginx 检测是否安装成功12nginx -vcurl -I &apos;127.0.0.1&apos; 安装mysql12sudo apt-get install mysql-serversudo apt-get install mysql-client 测试是否安装成功1mysql -uroot -p 至此，完成了一大部分。 3.配置lnmp环境配置php1sudo vim /etc/php5/fpm/pool.d/www.conf 将listen = /run/php5/php5-fpm.sock修改为listen = 127.0.0.1:9000然后重启sudo service php5-fpm restart配置nginx先备份default文件为default.bak,然后修改default文件，这样就可以在指定目录运行php项目了。 4.配置vagrantfile打开主机上的d:/vagrant/vagrangfile文件修改相关配置，让项目可以在主机的浏览器上运行同时实时同步文件共享操作12config.vm.network &quot;forwarded_port&quot;, guest:80, host:8888` 用于端口转发，这样我们就可以在主机浏览器通过连接http://127.0.0.1:8888访问nginx了1config.vm.network &quot;private_network&quot;,ip:&quot;192.168.199.101&quot; 用于网络配置，这样我们就不必通过端口转发进行访问，只需要http://192.168.101就行了1config.vm.synced_folder &quot;d:/phpcode&quot;,&quot;/home/www&quot; 用于目录共享，这样我们在主机上编写的项目就可以实时同步到开发环境中，非常方便对于/home/www目录，我们需要在虚拟机上建立1sudo mkdir /home/www 完成后重启虚拟机1vagrant reload 这样我们就完成了基于vagrant的lnmp开发环境的搭建现在我们建立一个php.php文件测试一下，如下图 5.打包分发1vagrant package --output xxx.box","categories":[{"name":"-运维","slug":"运维","permalink":"http://kinano.top/categories/运维/"}],"tags":[{"name":"-虚拟技术 -Linux -PHP","slug":"虚拟技术-Linux-PHP","permalink":"http://kinano.top/tags/虚拟技术-Linux-PHP/"}]},{"title":"Linux学习","slug":"Linuxlearn","date":"2017-11-24T18:12:45.000Z","updated":"2017-11-25T01:08:48.426Z","comments":true,"path":"2017/11/25/Linuxlearn/","link":"","permalink":"http://kinano.top/2017/11/25/Linuxlearn/","excerpt":"Linux命令学习 一些常识命令格式命令 [选项][参数]","text":"Linux命令学习 一些常识命令格式命令 [选项][参数] 查询目录中的内容1ls [选项][文件或目录] 选项: -a 显示所有文件，包括隐藏文件 -l 显示详细信息 -d 查看目录属性 -h 人性化显示文件大小 -i 显示inode 权限操作1chmod + xxx eg:1chmod + 777,chmod + 755 常用目录说明 目录名 作用 / 根目录 /bin 命令保存目录 /boot 启动目录 /dev 设备文件保存目录 /etc 配置文件保存目录 /home 普通用户家目录 /root 超级用户家目录 /tmp 临时目录 /usr 系统软件资源目录 /var 系统相关文档内容保存目录 目录处理命令建立目录命令1mkdir -p [目录名] #-p，递归创建目录 切换目录1cd [目录] 简化操作1234cd ~ #进入当前用户的家目录cd - #进入上次目录cd .. #进入上级目录cd . #进入当前目录 删除目录删除空白目录1rmdir 删除目录1rm -rf [文件或目录] 选项： -r 删除目录 -f 强制 复制命令1cp [选项][源文件或目录][目标文件或目录] 选项： -r 复制目录 -d 若原文件是链接文件，则复制链接属性 -p 同时复制文件的属性 -a 相当于-pdr 剪切或重命名1mv [原文件或目录][目标目录] 链接命令1ln -s [原文件][目标文件] 功能： 生成链接文件 -s 创建软连接 搜索命令命令搜索命令1whereis [选项][命令名] 选项： -b：只查找可执行文件 -m: 只查找帮助文件 1which [文件名] #搜索命令所在路径与别名 文件搜索命令1locate [文件名] #在后台数据库中按文件名搜索，速度快 1/var/lib/mlocate #命令所在的后台数据库 1updatedb #更新数据库 1find [选项][搜索范围][搜索条件] #搜索条件可用通配符匹配,*匹配任意内容，?匹配任意字符,[]匹配任意括号内的内容 选项 -i 不区分大小写 -nouser 找出垃圾文件 -atime -/+时间 (eg:find /home/www php.php -atime +10)文件访问时间 -ctime 改变文件属性时间 -mtine 文件修改时间 -size -/+大小k/M 文件大小 1grep [选项][字符串][文件名] #在文件当中匹配符合条件的字符串 选项: -i 忽略大小写 -v 排除指定字符串 帮助命令1man [选项]命令 #获取指定命令的帮助 选项: -k 查看和命令相关的所有帮助 -数字 man的级别 压缩与解压命令.zip格式123zip 压缩文件名 原文件 #压缩文件zip -r 压缩文件名 源目录 #压缩目录unzip 压缩文件名 #解压缩文件 .gz格式12345gzip 原文件 #压缩为.gz的文件，原文件会消失gzip -c 原文件 &gt; 压缩文件 #保留原文件gzip -r 目录 #压缩目录下的所有子文件，当是不能压缩目录gzip -d 压缩文件 #解压.gz文件gunzip 压缩文件 #解压.gz文件 .bz2格式1234bzip2 压缩文件 #压缩为.bz2格式，不保留原文件bzip2 -k 原文件 #保留原文件bzip2 -d 压缩文件 #解压文件bunzip2 压缩文件 #解压文件 解打包文件12345tar -xvf 打包文件名 #先解压,然后解打包tar -zcvf 压缩包名.tar.gz 原文件 #压缩tar -zxvf 压缩包名.tar.gz #解压缩tar -jcvf 压缩包名.tar.bz2 原文件 #压缩tar -jxvf 压缩包名.tar.bz2 #解压缩 关机与重启命令1shutdown [选项]时间 选项: -c 取消前一个关机命令 -h 关机 -r 重启 其他关机命令123haltpoweroffinit 0 其他重启命令12rebootinit 6","categories":[{"name":"-运维","slug":"运维","permalink":"http://kinano.top/categories/运维/"}],"tags":[{"name":"-Linux","slug":"Linux","permalink":"http://kinano.top/tags/Linux/"}]}]}